{"version":3,"sources":["components/NavBar/Navbar.js","components/modals/CreateDB.js","components/Pages/Databases.js","components/Pages/Items.js","components/modals/CreateTable.js","components/Pages/Tables.js","components/Pages/Endpoints.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","Navbar","expand","variant","bg","Container","Brand","href","Nav","className","to","CreateDatabase","props","useState","name","setName","Modal","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","InputGroup","Prepend","Text","FormControl","aria-label","aria-describedby","onChange","e","target","value","Footer","Button","onClick","handleSubmit","DataBases","dbs","setDbs","React","modalShow","setModalShow","progress","setProgress","msg","setMsg","setVariant","useEffect","axios","get","then","res","data","catch","err","console","log","fluid","Alert","show","style","marginBottom","Spinner","animation","as","db","trim","post","response","status","alert","onHide","ListGroup","map","display","alignItems","Item","action","history","push","key","marginRight","icon","faTrash","cursor","delete","handleDelete","Items","items","setItems","fields","setFields","match","params","table","field","length","item","disabled","JSON","stringify","CreateTable","Tables","tables","setTables","pairs","split","isValid","fieldsObj","reduce","obj","singles","test","Number","Endpoints","Table","responsive","App","exact","path","render","component","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.37cae7cc.chunk.js","sourcesContent":["import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Container from \"react-bootstrap/Container\";\nimport Nav from \"react-bootstrap/Nav\";\nimport {Link} from \"react-router-dom\";\n\nexport default function NavBar() {\n    return (\n        <Navbar expand=\"lg\" variant=\"light\" bg=\"light\">\n            <Container>\n                <Navbar.Brand href=\"/\">Databases</Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                    <Link to=\"/endpoints\">Endpoints</Link>\n                    {/*<Link to=\"/tables\">Tables</Link>*/}\n                    {/*<Link to=\"/items\">Items</Link>*/}\n                </Nav>\n            </Container>\n        </Navbar>\n    );\n}","import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default function CreateDatabase(props) {\n    const [name, setName] = useState('');\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Create Database\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <InputGroup size=\"sm\" className=\"mb-3\">\n                    <InputGroup.Prepend>\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Name</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\"\n                                 onChange={e => setName(e.target.value)} />\n                </InputGroup>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={() => props.handleSubmit(name)}>Create</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}","import React, {useEffect, useState} from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport axios from \"axios\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Alert from \"react-bootstrap/Alert\";\nimport CreateDatabase from \"../modals/CreateDB\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTrash} from '@fortawesome/free-solid-svg-icons'\n\nexport default function DataBases(props) {\n    const [dbs, setDbs] = useState([]);\n    const [modalShow, setModalShow] = React.useState(false);\n    const [progress, setProgress] = React.useState(false);\n    const [msg, setMsg] = React.useState(null);\n    const [variant, setVariant] = React.useState('success');\n\n    useEffect(() => {\n        axios\n            .get(\"http://apigo-docker.herokuapp.com/databases\")\n            .then(res => setDbs(res.data))\n            .catch(err => console.log(err));\n    }, [msg]);\n\n    const handleSubmit = db => {\n\n        if (!db.trim()) {\n            alert(\"Enter valid database name!\");\n            return;\n        }\n\n        setProgress(true);\n        setModalShow(false);\n        axios\n            .post(\"http://apigo-docker.herokuapp.com/databases\", {\"db\": db})\n            .then(() => {\n                setMsg('Database Created Successfully!');\n                setVariant('success');\n            })\n            .catch(err => {\n                setMsg(err.response.data.status);\n                setVariant('danger');\n            });\n        setProgress(false);\n    };\n\n    const handleDelete = db => {\n        setProgress(true);\n        axios\n            .delete(\"http://apigo-docker.herokuapp.com/databases/\" + db)\n            .then(() => {\n                setMsg('Database Removed Successfully!');\n                setVariant('success');\n            })\n            .catch(err => {\n                setMsg(err.response.data.status);\n                setVariant('danger');\n            });\n        setProgress(false);\n    };\n\n    return (\n        <Container fluid className=\"d-flex flex-column p-4 align-items-center justify-content-center\">\n            <Alert variant={variant} show={msg}>\n                {msg}\n            </Alert>\n            <div className=\"h3\">Databases</div>\n            <Button variant=\"primary\" onClick={() => setModalShow(true)} style={{marginBottom: \"20px\"}}>\n                {progress ? <Spinner animation=\"border\" variant=\"light\" as=\"span\"/> : \"Create Database\"}\n            </Button>\n\n            <CreateDatabase\n                show={modalShow}\n                handleSubmit={handleSubmit}\n                onHide={() => setModalShow(false)}\n            />\n            <ListGroup>\n                {\n                    dbs.map(db => (\n                        <div style={{display:\"flex\", alignItems:\"center\"}}>\n                            <ListGroup.Item action onClick={() => props.history.push(`${db}/tables`)} key={db}\n                            style={{marginRight:\"20px\"}}>\n                                {db}\n                            </ListGroup.Item>\n                            <FontAwesomeIcon icon={faTrash} style={{cursor:\"pointer\"}} onClick={() => handleDelete(db)}/>\n                        </div>\n                    ))\n                }\n            </ListGroup>\n        </Container>\n    );\n}","import React, {useEffect, useState} from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport axios from \"axios\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nexport default function Items(props) {\n\n    const [items, setItems] = useState([]);\n    const [fields, setFields] = useState([]);\n\n    useEffect(() => {\n        axios\n            .get(`http://apigo-docker.herokuapp.com/${props.match.params.db}/${props.match.params.table}`)\n            .then(res => {\n                setItems(res.data.data);\n                setFields(res.data.fields)\n            })\n            .catch(err => console.log(err));\n    }, []);\n\n    return (\n        <Container fluid className=\"d-flex flex-column p-4 align-items-center justify-content-center\">\n            <div className=\"h3\">Items</div>\n            <h6 className=\"font-weight-bold\">Database : {props.match.params.db}</h6>\n            <h6 className=\"font-weight-bold\">Table : {props.match.params.table}</h6>\n            <div>\n                <h6>\n                    <br/>\n                    <h5 className=\"font-weight-bolder\">Fields</h5>\n                    {\n                        fields.map(field => (\n                            <div><span className=\"font-weight-bolder\">{field.field}</span> : max_length = {field.length}\n                            </div>\n                        ))\n                    }\n                </h6>\n            </div>\n            <ListGroup>\n                {\n                    items.map(item => (\n                        <ListGroup.Item action key={item.id} disabled>\n                            {JSON.stringify(item)}\n                        </ListGroup.Item>\n                    ))\n                }\n            </ListGroup>\n        </Container>\n    );\n}","import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default function CreateTable(props) {\n    const [name, setName] = useState('');\n    const [fields, setFields] = useState('');\n\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Create Table\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <InputGroup size=\"sm\" className=\"mb-3\">\n                    <InputGroup.Prepend>\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Name</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\"\n                                 onChange={e => setName(e.target.value)} />\n                </InputGroup>\n                <h6>Use <strong>,</strong> to separate fields and <strong>:</strong> to give max length.</h6>\n                <InputGroup size=\"sm\" className=\"mb-3\">\n                    <InputGroup.Prepend>\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Fields</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\"\n                                 onChange={e => setFields(e.target.value)} />\n                </InputGroup>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={() => props.handleSubmit(name, fields)}>Create</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}","import React, {useEffect, useState} from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport axios from \"axios\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport CreateTable from \"../modals/CreateTable\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTrash} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function Tables(props) {\n\n    const [tables, setTables] = useState([]);\n    const [modalShow, setModalShow] = React.useState(false);\n    const [progress, setProgress] = React.useState(false);\n    const [msg, setMsg] = React.useState(null);\n    const [variant, setVariant] = React.useState('success');\n\n    useEffect(() => {\n        axios\n            .get(`http://apigo-docker.herokuapp.com/${props.match.params.db}/tables`)\n            .then(res => setTables(res.data))\n            .catch(err => console.log(err));\n    }, [msg]);\n\n    const handleSubmit = (name, fields) => {\n\n        if (!name.trim()){\n            alert(\"Enter valid table name!\");\n            return;\n        }\n\n        const pairs = fields.split(',');\n        const initialValue = {};\n        let isValid = true;\n        const fieldsObj = pairs.reduce((obj, item) => {\n            let singles = item.split(\":\");\n            if(singles.length !== 2 || !/^\\d+$/.test(singles[1]) || !singles[0] || !singles[1]) {\n                isValid = false;\n            }\n            return {\n                ...obj,\n                [singles[0].trim()] : Number(singles[1]),\n            };\n        }, initialValue);\n\n        if (!isValid){\n            alert(\"Enter Field's name and max-length as instructed!\");\n            return;\n        }\n\n        setProgress(true);\n        setModalShow(false);\n\n        const data = {\n            table : name.trim(),\n            fields : fieldsObj\n        };\n        axios\n            .post(`http://apigo-docker.herokuapp.com/${props.match.params.db}/tables`, data)\n            .then(() => {\n                setMsg('Table Created Successfully!');\n                setVariant('success');\n            })\n            .catch(err => {\n                setMsg(err.response.data.status);\n                setVariant('danger');\n            });\n        setProgress(false);\n    };\n\n    const handleDelete = table => {\n        setProgress(true);\n        axios\n            .delete(`http://apigo-docker.herokuapp.com/${props.match.params.db}/tables/` + table)\n            .then(() => {\n                setMsg('Table Removed Successfully!');\n                setVariant('success');\n            })\n            .catch(err => {\n                setMsg(err.response.data.status);\n                setVariant('danger');\n            });\n        setProgress(false);\n    };\n\n    return (\n        <Container fluid className=\"d-flex flex-column p-4 align-items-center justify-content-center\">\n            <Alert variant={variant} show={msg}>\n                {msg}\n            </Alert>\n            <div className=\"h3\">Tables</div>\n            <Button variant=\"primary\" onClick={() => setModalShow(true)} style={{marginBottom:\"20px\"}}>\n                {progress ? <Spinner animation=\"border\" variant=\"light\" as=\"span\" /> : \"Create Table\"}\n            </Button>\n\n            <CreateTable\n                show={modalShow}\n                handleSubmit={handleSubmit}\n                onHide={() => setModalShow(false)}\n            />\n            <ListGroup>\n                {\n                    tables.map(table => (\n                        <div style={{display:\"flex\", alignItems:\"center\"}}>\n                        <ListGroup.Item action\n                                        onClick={() => props.history.push(`/${props.match.params.db}/${table}/items`)}\n                                        key={table} style={{marginRight:\"20px\"}}>\n                            {table}\n                        </ListGroup.Item>\n                        <FontAwesomeIcon icon={faTrash} style={{cursor:\"pointer\"}} onClick={() => handleDelete(table)}/>\n                        </div>\n                    ))\n                }\n            </ListGroup>\n        </Container>\n    );\n}","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport {Table} from \"react-bootstrap\";\n\nexport default function Endpoints() {\n    return (\n        <Container fluid className=\"d-flex flex-column p-5 align-items-center justify-content-center\">\n            <div className=\"h3\">Endpoints</div>\n            <div>Base URL : <span className=\"font-weight-bold\">http://apigo-docker.herokuapp.com</span></div>\n            <br />\n            <Table responsive>\n                <thead>\n                <tr>\n                    <th>Endpoint Type</th>\n                    <th>Endpoint URL</th>\n                    <th>Request Type</th>\n                    <th>Others</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td>List Table Item(s)</td>\n                    <td>/:db/:table</td>\n                    <td>GET</td>\n                    <td></td>\n                </tr>\n                <tr>\n                    <td>Insert Table Item</td>\n                    <td>/:db/:table</td>\n                    <td>POST</td>\n                    <td></td>\n                </tr>\n                <tr>\n                    <td>Retrieve Table Item</td>\n                    <td>/:db/:table/:id</td>\n                    <td>GET</td>\n                    <td></td>\n                </tr>\n                <tr>\n                    <td>Update Table Item</td>\n                    <td>/:db/:table/:id</td>\n                    <td>PUT</td>\n                    <td></td>\n                </tr>\n                <tr>\n                    <td>Delete Table Item</td>\n                    <td>/:db/:table/:id</td>\n                    <td>DELETE</td>\n                    <td></td>\n                </tr>\n                <tr>\n                    <td><h5 className=\"font-weight-bolder\">Extra Endpoints</h5></td>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                </tr>\n                <tr>\n                    <td>List Databases</td>\n                    <td>/databases</td>\n                    <td>GET</td>\n                    <td>Extra Endpoint</td>\n                </tr>\n                <tr>\n                    <td>Create Database</td>\n                    <td>/databases</td>\n                    <td>POST</td>\n                    <td>Extra Endpoint</td>\n                </tr>\n                <tr>\n                    <td>Remove Database</td>\n                    <td>/databases/:db</td>\n                    <td>DELETE</td>\n                    <td>Extra Endpoint</td>\n                </tr>\n                <tr>\n                    <td>List Tables</td>\n                    <td>/:db/tables</td>\n                    <td>GET</td>\n                    <td>Extra Endpoint</td>\n                </tr>\n                <tr>\n                    <td>Create Table</td>\n                    <td>/:db/tables</td>\n                    <td>POST</td>\n                    <td>Extra Endpoint</td>\n                </tr>\n                <tr>\n                    <td>Remove Table</td>\n                    <td>/:db/tables/:table</td>\n                    <td>DELETE</td>\n                    <td>Extra Endpoint</td>\n                </tr>\n                </tbody>\n            </Table>\n            <br />\n            <br />\n            <h5 className=\"font-weight-bolder\">Made w/ : </h5>\n            <h6 className=\"font-weight-bold\">ReactJS + Golang + Docker w/ Docker-Compose</h6>\n        </Container>\n    )\n}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NavBar from \"./components/NavBar/Navbar\";\nimport {Route, Switch, BrowserRouter, Redirect} from \"react-router-dom\";\nimport DataBases from \"./components/Pages/Databases\";\nimport Items from \"./components/Pages/Items\";\nimport Tables from \"./components/Pages/Tables\";\nimport Endpoints from \"./components/Pages/Endpoints\";\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <NavBar/>\n            <Route exact path=\"/\" render={() => (<Redirect to={\"/databases\"}/>)} />\n            <Switch>\n                <Route exact path=\"/databases\" component={DataBases}/>\n                <Route exact path=\"/endpoints\" component={Endpoints}/>\n                <Route exact path=\"/:db/tables\" component={Tables}/>\n                <Route exact path=\"/:db/:table/items\" component={Items}/>\n            </Switch>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}